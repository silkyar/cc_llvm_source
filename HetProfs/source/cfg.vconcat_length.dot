digraph "CFG for 'vconcat_length' function" {
	label="CFG for 'vconcat_length' function";

	Node0x20ba330 [shape=record,label="{entry:\l  %first.addr = alloca i8*, align 8\l  %args.addr = alloca %struct.__va_list_tag*, align 8\l  %length = alloca i64, align 8\l  %arg = alloca i8*, align 8\l  store i8* %first, i8** %first.addr, align 8\l  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8\l  store i64 0, i64* %length, align 8\l  %0 = load i8** %first.addr, align 8\l  store i8* %0, i8** %arg, align 8\l  br label %for.cond\l}"];
	Node0x20ba330 -> Node0x20ba390;
	Node0x20ba390 [shape=record,label="{for.cond:                                         \l  %1 = load i8** %arg, align 8\l  %tobool = icmp ne i8* %1, null\l  br i1 %tobool, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x20ba390:s0 -> Node0x20ba3f0;
	Node0x20ba390:s1 -> Node0x20ba5d0;
	Node0x20ba3f0 [shape=record,label="{for.body:                                         \l  %2 = load i8** %arg, align 8\l  %call = call i64 @strlen(i8* %2) #6\l  %3 = load i64* %length, align 8\l  %add = add i64 %3, %call\l  store i64 %add, i64* %length, align 8\l  br label %for.inc\l}"];
	Node0x20ba3f0 -> Node0x20ba450;
	Node0x20ba450 [shape=record,label="{for.inc:                                          \l  %4 = load %struct.__va_list_tag** %args.addr, align 8\l  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 0\l  %gp_offset = load i32* %gp_offset_p\l  %fits_in_gp = icmp ule i32 %gp_offset, 40\l  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem\l|{<s0>T|<s1>F}}"];
	Node0x20ba450:s0 -> Node0x20ba4b0;
	Node0x20ba450:s1 -> Node0x20ba510;
	Node0x20ba4b0 [shape=record,label="{vaarg.in_reg:                                     \l  %5 = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 3\l  %reg_save_area = load i8** %5\l  %6 = getelementptr i8* %reg_save_area, i32 %gp_offset\l  %7 = bitcast i8* %6 to i8**\l  %8 = add i32 %gp_offset, 8\l  store i32 %8, i32* %gp_offset_p\l  br label %vaarg.end\l}"];
	Node0x20ba4b0 -> Node0x20ba570;
	Node0x20ba510 [shape=record,label="{vaarg.in_mem:                                     \l  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 2\l  %overflow_arg_area = load i8** %overflow_arg_area_p\l  %9 = bitcast i8* %overflow_arg_area to i8**\l  %overflow_arg_area.next = getelementptr i8* %overflow_arg_area, i32 8\l  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p\l  br label %vaarg.end\l}"];
	Node0x20ba510 -> Node0x20ba570;
	Node0x20ba570 [shape=record,label="{vaarg.end:                                        \l  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ]\l  %10 = load i8** %vaarg.addr\l  store i8* %10, i8** %arg, align 8\l  br label %for.cond\l}"];
	Node0x20ba570 -> Node0x20ba390;
	Node0x20ba5d0 [shape=record,label="{for.end:                                          \l  %11 = load i64* %length, align 8\l  ret i64 %11\l}"];
}
