digraph "CFG for 'xmalloc' function" {
	label="CFG for 'xmalloc' function";

	Node0x26a1b30 [shape=record,label="{entry:\l  %size.addr = alloca i64, align 8\l  %newmem = alloca i8*, align 8\l  store i64 %size, i64* %size.addr, align 8\l  %0 = load i64* %size.addr, align 8\l  %cmp = icmp eq i64 %0, 0\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x26a1b30:s0 -> Node0x26a1b90;
	Node0x26a1b30:s1 -> Node0x26a1bf0;
	Node0x26a1b90 [shape=record,label="{if.then:                                          \l  store i64 1, i64* %size.addr, align 8\l  br label %if.end\l}"];
	Node0x26a1b90 -> Node0x26a1bf0;
	Node0x26a1bf0 [shape=record,label="{if.end:                                           \l  %1 = load i64* %size.addr, align 8\l  %call = call i8* @malloc(i64 %1)\l  store i8* %call, i8** %newmem, align 8\l  %2 = load i8** %newmem, align 8\l  %tobool = icmp ne i8* %2, null\l  br i1 %tobool, label %if.end2, label %if.then1\l|{<s0>T|<s1>F}}"];
	Node0x26a1bf0:s0 -> Node0x26a1cb0;
	Node0x26a1bf0:s1 -> Node0x26a1c50;
	Node0x26a1c50 [shape=record,label="{if.then1:                                         \l  %3 = load i64* %size.addr, align 8\l  call void @xmalloc_failed(i64 %3) #4\l  unreachable\l}"];
	Node0x26a1cb0 [shape=record,label="{if.end2:                                          \l  %4 = load i8** %newmem, align 8\l  ret i8* %4\l}"];
}
