digraph "CFG for 'reconcat' function" {
	label="CFG for 'reconcat' function";

	Node0x2f1b290 [shape=record,label="{entry:\l  %args = alloca %struct.__va_list, align 4\l  %args4 = alloca %struct.__va_list, align 4\l  %args1 = bitcast %struct.__va_list* %args to i8*\l  call void @llvm.va_start(i8* %args1)\l  %tobool3.i = icmp eq i8* %first, null\l  br i1 %tobool3.i, label %vconcat_length.exit, label %for.body.lr.ph.i\l|{<s0>T|<s1>F}}"];
	Node0x2f1b290:s0 -> Node0x2f1b410;
	Node0x2f1b290:s1 -> Node0x2f1b2f0;
	Node0x2f1b2f0 [shape=record,label="{for.body.lr.ph.i:                                 \l  %.fca.0.gep8 = bitcast %struct.__va_list* %args to i32*\l  %.fca.0.load9 = load i32* %.fca.0.gep8, align 4\l  br label %for.body.i\l}"];
	Node0x2f1b2f0 -> Node0x2f1b350;
	Node0x2f1b350 [shape=record,label="{for.body.i:                                       \l  %arg.06.i = phi i8* [ %first, %for.body.lr.ph.i ], [ %3, %for.body.i ]\l  %length.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %add.i, %for.body.i ]\l  %args.sroa.0.04.i = phi i32 [ %.fca.0.load9, %for.body.lr.ph.i ], [ %1, %for.body.i ]\l  %call.i = call i32 @strlen(i8* %arg.06.i) #4\l  %add.i = add i32 %call.i, %length.05.i\l  %0 = inttoptr i32 %args.sroa.0.04.i to i8*\l  %ap.next.i = getelementptr i8* %0, i32 4\l  %1 = ptrtoint i8* %ap.next.i to i32\l  %2 = inttoptr i32 %args.sroa.0.04.i to i8**\l  %3 = load i8** %2, align 4\l  %tobool.i = icmp eq i8* %3, null\l  br i1 %tobool.i, label %vconcat_length.exit.loopexit, label %for.body.i\l|{<s0>T|<s1>F}}"];
	Node0x2f1b350:s0 -> Node0x2f1b3b0;
	Node0x2f1b350:s1 -> Node0x2f1b350;
	Node0x2f1b3b0 [shape=record,label="{vconcat_length.exit.loopexit:                     \l  %phitmp = add i32 %add.i, 1\l  br label %vconcat_length.exit\l}"];
	Node0x2f1b3b0 -> Node0x2f1b410;
	Node0x2f1b410 [shape=record,label="{vconcat_length.exit:                              \l  %length.0.lcssa.i = phi i32 [ 1, %entry ], [ %phitmp, %vconcat_length.exit.loopexit ]\l  %call2 = call noalias i8* @xmalloc(i32 %length.0.lcssa.i) #1\l  call void @llvm.va_end(i8* %args1)\l  %args45 = bitcast %struct.__va_list* %args4 to i8*\l  call void @llvm.va_start(i8* %args45)\l  br i1 %tobool3.i, label %vconcat_copy.exit, label %for.body.lr.ph.i15\l|{<s0>T|<s1>F}}"];
	Node0x2f1b410:s0 -> Node0x2f1b530;
	Node0x2f1b410:s1 -> Node0x2f1b470;
	Node0x2f1b470 [shape=record,label="{for.body.lr.ph.i15:                               \l  %.fca.0.gep = bitcast %struct.__va_list* %args4 to i32*\l  %.fca.0.load = load i32* %.fca.0.gep, align 4\l  br label %for.body.i20\l}"];
	Node0x2f1b470 -> Node0x2f1b4d0;
	Node0x2f1b4d0 [shape=record,label="{for.body.i20:                                     \l  %args.sroa.0.04.i16 = phi i32 [ %.fca.0.load, %for.body.lr.ph.i15 ], [ %5, %for.body.i20 ]\l  %arg.03.i = phi i8* [ %first, %for.body.lr.ph.i15 ], [ %7, %for.body.i20 ]\l  %end.02.i = phi i8* [ %call2, %for.body.lr.ph.i15 ], [ %add.ptr.i, %for.body.i20 ]\l  %call.i17 = call i32 @strlen(i8* %arg.03.i) #4\l  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %end.02.i, i8* %arg.03.i, i32 %call.i17, i32 1, i1 false) #1\l  %add.ptr.i = getelementptr inbounds i8* %end.02.i, i32 %call.i17\l  %4 = inttoptr i32 %args.sroa.0.04.i16 to i8*\l  %ap.next.i18 = getelementptr i8* %4, i32 4\l  %5 = ptrtoint i8* %ap.next.i18 to i32\l  %6 = inttoptr i32 %args.sroa.0.04.i16 to i8**\l  %7 = load i8** %6, align 4\l  %tobool.i19 = icmp eq i8* %7, null\l  br i1 %tobool.i19, label %vconcat_copy.exit, label %for.body.i20\l|{<s0>T|<s1>F}}"];
	Node0x2f1b4d0:s0 -> Node0x2f1b530;
	Node0x2f1b4d0:s1 -> Node0x2f1b4d0;
	Node0x2f1b530 [shape=record,label="{vconcat_copy.exit:                                \l  %end.0.lcssa.i = phi i8* [ %call2, %vconcat_length.exit ], [ %add.ptr.i, %for.body.i20 ]\l  store i8 0, i8* %end.0.lcssa.i, align 1\l  %tobool = icmp eq i8* %optr, null\l  br i1 %tobool, label %if.end, label %if.then\l|{<s0>T|<s1>F}}"];
	Node0x2f1b530:s0 -> Node0x2f1b5f0;
	Node0x2f1b530:s1 -> Node0x2f1b590;
	Node0x2f1b590 [shape=record,label="{if.then:                                          \l  call void @free(i8* %optr) #1\l  br label %if.end\l}"];
	Node0x2f1b590 -> Node0x2f1b5f0;
	Node0x2f1b5f0 [shape=record,label="{if.end:                                           \l  call void @llvm.va_end(i8* %args45)\l  ret i8* %call2\l}"];
}
