digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x17d2490 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %i = alloca i32, align 4\l  %a = alloca [10 x i32], align 16\l  store i32 0, i32* %retval\l  store i32 0, i32* %i, align 4\l  %0 = bitcast [10 x i32]* %a to i8*\l  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 40, i32 16, i1 false)\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x17d2490 -> Node0x17d24f0;
	Node0x17d24f0 [shape=record,label="{for.cond:                                         \l  %1 = load i32* %i, align 4\l  %cmp = icmp slt i32 %1, 20\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x17d24f0:s0 -> Node0x17d2990;
	Node0x17d24f0:s1 -> Node0x17ccab0;
	Node0x17d2990 [shape=record,label="{for.body:                                         \l  %2 = load i32* %i, align 4\l  %mul = mul nsw i32 %2, 4\l  %idxprom = sext i32 %mul to i64\l  %arrayidx = getelementptr inbounds [10 x i32]* %a, i32 0, i64 %idxprom\l  %3 = load i32* %arrayidx, align 4\l  %add = add nsw i32 %3, 5\l  %4 = load i32* %i, align 4\l  %idxprom1 = sext i32 %4 to i64\l  %arrayidx2 = getelementptr inbounds [10 x i32]* %a, i32 0, i64 %idxprom1\l  store i32 %add, i32* %arrayidx2, align 4\l  %5 = load i32* %i, align 4\l  %cmp3 = icmp sge i32 %5, 3\l  br i1 %cmp3, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x17d2990:s0 -> Node0x17d29f0;
	Node0x17d2990:s1 -> Node0x17d2a50;
	Node0x17d29f0 [shape=record,label="{if.then:                                          \l  br label %for.end\l}"];
	Node0x17d29f0 -> Node0x17ccab0;
	Node0x17d2a50 [shape=record,label="{if.end:                                           \l  br label %for.inc\l}"];
	Node0x17d2a50 -> Node0x17d2ab0;
	Node0x17d2ab0 [shape=record,label="{for.inc:                                          \l  %6 = load i32* %i, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x17d2ab0 -> Node0x17d24f0;
	Node0x17ccab0 [shape=record,label="{for.end:                                          \l  ret i32 1\l}"];
}
